name: Elixir CI
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        elixir_version: ['1.9.4', '1.10.3']
        otp_version: ['22.3.4.10', '23.0.3']
        exclude:
        - otp_version: '22.0'
          elixir_version: '1.7.4'
    steps:
    - uses: actions/checkout@v2
    - name: Set up Elixir
      uses: actions/setup-elixir@v1
      with:
        elixir-version: ${{ matrix.elixir_version }}
        otp-version: ${{ matrix.otp_version }}
    - name: Restore dependencies and _build cache
      uses: actions/cache@v2
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    - name: Restore plts
      uses: actions/cache@v2
      with:
        path: priv/plts
        key: ${{ runner.os }}-dialyzer-${{ matrix.elixir_version }}-${{ matrix.otp_version }}-${{ hashFiles('**/mix.lock') }}
    - name: Install dependencies
      run: mix deps.get
    - name: Check formatting
      run: mix format --check-formatted
    - name: Run tests
      run: mix test --trace --include deprecations
    - name: Run dialyzer
      run: mix dialyzer --halt-exit-status
